<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.startcaft.basic.dao.master.IUserDao">

    <sql id="Base_Column_List">
        id, age, create_datetime, login_name, name, password, gender, states, organization_id
    </sql>

    <!--基本映射-->
    <resultMap id="BaseResultMap" type="com.startcaft.basic.core.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="create_datetime" property="createDatetime" jdbcType="TIMESTAMP"/>
        <result column="login_name" property="loginName" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="INTEGER"/>
        <result column="states" property="states" jdbcType="INTEGER"/>
        <result column="organization_id" property="organizationId" jdbcType="BIGINT"/>
    </resultMap>

    <!--用户关联组织的映射-->
    <resultMap type="com.startcaft.basic.core.entity.User" id="UserResultMapWithOrganization" extends="BaseResultMap">
        <result column="organization_id" property="organization.id"/>
        <result column="org_name" property="organization.name"/>
    </resultMap>

    <!--用户关联权限集合的映射-->
    <resultMap type="com.startcaft.basic.core.entity.User" id="UserResultMapWithRoles" extends="BaseResultMap">
        <collection property="roles" ofType="com.startcaft.basic.core.entity.Role">
            <id column="rId" property="id"/>
            <result column="rName" property="name"/>
        </collection>
    </resultMap>

    <!--登录-->
    <select id="selectByNameAndPwd" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user u
        where
        u.login_name = #{loginName} and u.password = #{loginPwd}
    </select>

    <!--根据用户名查询-->
    <select id="selectByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_user WHERE login_name = #{_parameter}
    </select>

    <!-- 根据主键ID查询 -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!-- 分页查询 -->
    <select id="selectUserPage" parameterType="map" resultMap="UserResultMapWithOrganization">
        SELECT a.*,o.name AS org_name FROM sys_user AS a
        JOIN sys_organization AS o
        ON o.id = a.organization_id
        <where>
            <if test="name != null and name != ''">
                and a.name like "%"#{name}"%"
            </if>
            <if test="orgId != null">
                and a.organization_id = #{orgId}
            </if>
        </where>
    </select>

    <!-- 查询用户的所属角色 -->
    <select id="selectUserByIdWithRoles" parameterType="java.lang.Long" resultMap="UserResultMapWithRoles">
        select u.*,r.id as rId,r.name as rName from
        sys_user u left outer join sys_user_role ur on u.id = ur.user_id
        left outer join sys_role r on r.id = ur.role_id
        where u.id = #{userId}
    </select>


    <!-- 注意，这里返回了主键ID到User的id属性 -->
    <insert id="insert" parameterType="com.startcaft.basic.core.entity.User" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user (age, create_datetime,
        login_name, name, password,
        gender, states,organization_id)
        values (#{age,jdbcType=INTEGER}, #{createDatetime,jdbcType=TIMESTAMP},
        #{loginName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{gender,jdbcType=INTEGER}, #{states,jdbcType=INTEGER}, #{organizationId,jdbcType=BIGINT})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.startcaft.basic.core.entity.User">
        update sys_user
        <set>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="createDatetime != null">
                create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
            </if>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="states != null">
                states = #{states,jdbcType=INTEGER},
            </if>
            <if test="organizationId != null">
                organization_id = #{organizationId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>







    <!--<select id="selectUsersByRole" parameterType="java.lang.Long" resultMap="BaseResultMap">-->
        <!--select u.*,r.id as rId,r.name as rName,o.name as orgname,o.code as orgcode from-->
        <!--sys_user u left outer join sys_user_role ur on u.id = ur.user_id-->
        <!--left outer join sys_role r on r.id = ur.role_id-->
        <!--join sys_organization o on u.organization_id = o.id-->
        <!--where r.id = #{roleId}-->
    <!--</select>-->




</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.startcaft.basic.dao.master.IUserDao">

    <!-- 基本映射 -->
    <resultMap id="BaseResultMap" type="com.startcaft.basic.core.entity.User">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="states" jdbcType="INTEGER" property="states"/>
        <result column="organization_id" jdbcType="BIGINT" property="organizationId"/>
        <result column="create_datetime" jdbcType="TIMESTAMP" property="createDatetime"/>
    </resultMap>

    <!--用户关联组织的映射-->
    <resultMap type="com.startcaft.basic.core.entity.User" id="UserResultMapWithOrganization" extends="BaseResultMap">
        <result column="organization_id" property="organization.id"/>
        <result column="org_name" property="organization.orgName"/>
    </resultMap>

    <!--用户关联权限集合的映射-->
    <resultMap type="com.startcaft.basic.core.entity.User" id="UserResultMapWithRoles" extends="BaseResultMap">
        <collection property="roles" ofType="com.startcaft.basic.core.entity.Role">
            <id column="rId" property="id"/>
            <result column="rName" property="name"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, login_name, real_name, password, gender, states, organization_id, create_datetime
    </sql>

    <!--根据用户名查询-->
    <select id="selectByLoginName" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM sys_user WHERE login_name = #{parameter}
    </select>

    <!-- 根据主键ID查询 -->
    <select id="selectByPrimaryKey" resultMap="UserResultMapWithOrganization" parameterType="java.lang.Long">
        SELECT a.*,o.org_name AS org_name FROM sys_user AS a
        JOIN sys_organization AS o
        ON o.id = a.organization_id
        where a.id = #{id,jdbcType=BIGINT}
    </select>

    <!-- 分页查询 -->
    <select id="selectUserPage" parameterType="map" resultMap="UserResultMapWithOrganization">
        SELECT a.*,o.org_name AS org_name FROM sys_user AS a
        JOIN sys_organization AS o
        ON o.id = a.organization_id
        <where>
            <if test="realName != null and realName != ''">
                <bind name="_realName" value="'%'+realName+'%'"/>
                and a.real_name like "#{_realName}
            </if>
            <if test="loginName != null and loginName != ''">
                <bind name="_loginName" value="'%'+loginName+'%'"/>
                and a.login_name like #{_loginName}
            </if>
            <if test="orgId != null">
                and a.organization_id = #{orgId}
            </if>
        </where>
    </select>

    <!-- 查询用户的所属角色 -->
    <select id="selectUserByIdWithRoles" parameterType="java.lang.Long" resultMap="UserResultMapWithRoles">
        select u.*,r.id as rId,r.name as rName from
        sys_user u left outer join sys_user_role ur on u.id = ur.user_id
        left outer join sys_role r on r.id = ur.role_id
        where u.id = #{userId}
    </select>

    <insert id="insert" parameterType="com.startcaft.basic.core.entity.User">
        insert into sys_user (login_name, real_name,
          password, gender, states,
          organization_id, create_datetime)
        values (#{loginName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR},
          #{password,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{states,jdbcType=INTEGER},
          #{organizationId,jdbcType=BIGINT}, #{createDatetime,jdbcType=TIMESTAMP})
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.startcaft.basic.core.entity.User">
        update sys_user
        <set>
            <if test="loginName != null">
                login_name = #{loginName,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="states != null">
                states = #{states,jdbcType=INTEGER},
            </if>
            <if test="organizationId != null">
                organization_id = #{organizationId,jdbcType=BIGINT},
            </if>
            <if test="createDatetime != null">
                create_datetime = #{createDatetime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

</mapper>